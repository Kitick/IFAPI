"use strict";class DOMInterface{#t=new Map;constructor(){}#e(t){const e=this.#t.get(t.id);if(void 0===e)return;let a=null;switch(t.type){case"number":a=parseFloat(t.value);break;case"checkbox":a=t.checked;break;case"select-one":a=t.value}"number"==typeof a&&isNaN(a)&&(a=null),e.value=a}#a(t){t.classList.add("error"),setTimeout((()=>{t.classList.remove("error")}),2e3)}add(...t){t.forEach((t=>{if(void 0!==this.#t.get(t))return;const e=document.getElementById(t);if(null===e)return;const a=e;a.addEventListener("change",(()=>{this.#e(a)})),this.#t.set(a.id,{dom:a,value:null}),this.#e(a)}))}read(...t){let e=[];return t.forEach((t=>{const a=this.#t.get(t)?.value;void 0!==a&&e.push(a)})),e}readAll(){let t=new Map;return this.#t.forEach(((e,a)=>{t.set(a,e.value)})),t}write(t,e){const a=this.#t.get(t);if(void 0===a)return;a.value=e;const o=a.dom;"boolean"!=typeof e?(e=e??"",o.value=e.toString()):o.checked=e}validate(t=!1,...e){let a=!0;return e.forEach((e=>{const o=this.#t.get(e);if(void 0===o)return!1;const n=null!==o.value;!n&&t&&this.#a(o.dom),a=n&&a})),a}}class ProfileStorage{static defaultName="#default";#o;constructor(t){this.#o=t;const e=ProfileStorage.defaultName;null===localStorage.getItem(e)&&this.save(e),this.#n(),this.load(e)}#n(){let t=[];for(let e=0,a=localStorage.length;e<a;e++)t.push(localStorage.key(e));t.sort(),this.#o.innerHTML="",t.forEach((t=>{let e=new Option(t,t);this.#o.appendChild(e)}))}#i(t,e){const a=document.getElementById(t);null!==a&&(a.classList.remove("off"),a.classList.add(e),setTimeout((()=>{a.classList.remove(e),a.classList.add("off")}),500))}add(t){const e=document.getElementById("profile-name");void 0===t&&(t=e.value),e.value="",this.save(t),this.#n(),this.#o.value=t}save(t=this.#o.value){if(""===t)return void this.add();const e=domInterface.readAll();let a={};e.forEach(((t,e)=>{a[e]=t})),localStorage.setItem(t,JSON.stringify(a)),this.#i("profile-save","active")}load(t=this.#o.value){const e=localStorage.getItem(t);if(""===t||null===e)return void this.#i("profile-load","error");this.#o.value=t;const a=document.getElementById("loadempty").checked,o=JSON.parse(e);for(let t in o){let e=o[t];if(null!==e){let t=parseFloat(e.toString());isNaN(t)||(e=t)}else if(!a)continue;domInterface.write(t,e)}this.#i("profile-load","active")}remove(t=this.#o.value){if(""===t)return;confirm("Are you sure you want to delete: "+t)&&(localStorage.removeItem(t),this.#n())}}class Autofunction{delay;#s;#l;#r;#c=null;#d=[];#u=[];#f=[];#h=!1;#g=!1;#p;memory=new Map;stage=0;constructor(t,e,a,o,n,i){this.delay=e;const s=document.getElementById(t);if(this.#l=document.getElementById(t+"-status"),this.status="Idle",null===s)throw"Element "+t+" is undefined";this.#s=s,this.#s.addEventListener("click",(()=>{dependencyCheck(t),this.setActive()})),this.#m(),this.#d=a,this.#u=o,this.#f=n,this.#p=i,this.#u.forEach((t=>{let e=document.getElementById(t);if(null===e||"INPUT"!==e.tagName||"number"!==e.type)return;const a=e,o=document.getElementById("tooltip");a.addEventListener("mouseenter",(()=>{o.innerText=a.placeholder})),a.addEventListener("mouseout",(()=>{o.innerText="Tooltip"}))})),domInterface.add(...o)}set status(t){if(this.#r=t,null===this.#l)return;const e="STATUS:\n\n"+t;this.#l.innerText!==e&&(this.#l.innerText=e)}get status(){return this.#r}isActive(){return this.#h}setActive(t=!this.#h){if(this.#h!==t){if(this.#h=t,this.#m(),this.#h)return this.stage=0,void this.#v();clearTimeout(this.#c??void 0),this.#c=null}}#m(t){const e=this.#s.classList;void 0===t&&(t=this.isActive()?"active":"off"),e.contains(t)||(["off","active","armed","error"].forEach((t=>{e.remove(t)})),e.add(t))}async#v(){if(!this.validateInputs(!0))return void this.error("Missing Inputs");const t=this.#g;this.#g=!1;const e=await readAsync(...this.#d),a=domInterface.read(...this.#u);this.#p(e,a),!this.#g&&t&&this.#m(),-1!==this.delay?this.#h&&(this.#c=setTimeout((()=>{this.#c=null,this.#v()}),this.delay)):this.setActive(!1)}validateInputs(t=!1){let e=domInterface.validate(t,...this.#u);return this.#f.forEach((t=>{e=t.validateInputs()&&e})),e}arm(){this.#g=!0,this.#m("armed")}error(t){void 0!==t&&(this.status=t),this.setActive(!1),this.#m("error"),setTimeout((()=>{this.#m()}),2e3)}}class PIDController{Kp;Ki;Kd;minValue;maxValue;cyclical;#w=0;#y=0;constructor(t=0,e=0,a=0,o=-1/0,n=1/0,i=!1){this.Kp=t,this.Ki=e,this.Kd=a,this.minValue=o,this.maxValue=n,this.cyclical=i}#A(t){const e=this.maxValue-this.minValue;return((t-this.minValue)%e+e)%e+this.minValue}#I(t){const e=this.maxValue-this.minValue,a=Math.sign(t),o=this.#A(t);return o>e/2?(e-o)*-a:t}update(t,e,a){let o=e-t;this.cyclical&&(t=this.#A(t),o=(e=this.#A(e))-t,o=this.#I(o));const n=o*a;this.#y+=n,this.#y=Math.max(this.#y,this.minValue/this.Ki),this.#y=Math.min(this.#y,this.maxValue/this.Ki);const i=(o-this.#w)/a;this.#w=o;let s=this.Kp*o+this.Ki*this.#y+this.Kd*i;return s=Math.max(s,this.minValue),s=Math.min(s,this.maxValue),s}}let updateTimeout,speedPID=new PIDController(5,.5,5,-100,100);async function updateSpeed(t,e){const[a]=await readAsync("airspeed");write("throttle",speedPID.update(a,t,e))}function constantUpdate(t){clearTimeout(updateTimeout),updateSpeed(t,.1),updateTimeout=setTimeout((()=>{constantUpdate(t)}),100)}const NMtoFT=6076.12;function dms(t,e=0,a=0){return Math.sign(t)*(Math.abs(t)+e/60+a/3600)}function calcLLfromHD(t,e,a,o=0){e=90-e-o,e*=toRad;const n=(a/=60)*Math.sin(e)+t.lat;return{lat:n,long:a*Math.cos(e)/Math.cos(toRad*(t.lat+n)*.5)+t.long}}function calcLLdistance(t,e){const a=60*(e.lat-t.lat);return((60*(e.long-t.long)*Math.cos(.5*(t.lat+e.lat)*toRad))**2+a**2)**.5}function controlThrottle(t,e,a){write("spdon",!1),write("throttle",t>0?-80:-100),write("spd",e),write("spoilers",1),a&&(write("spdon",!0),write("spoilers",2))}function showfpl(t,e,a){const o=document.createElement("input"),n=document.createElement("br");o.type="number",o.id=t,a.innerHTML+=" "+e,a.appendChild(o),a.appendChild(n)}function nextRestriction(t,e,a,o){return t.identifier!==e.name&&t.name!==e.name||(e.index=a,e.children=o,e.altitude=t.altitude),a>=e.index&&-1!==t.altitude&&(e.altitudeRestriction.push(t.altitude),e.restrictionLocation={lat:t.location.Latitude,long:t.location.Longitude}),e}function speak(t){t=t.toString();const e=document.getElementById("voices").selectedIndex,a=speechSynthesis.getVoices(),o=document.getElementById("utterancerate");let n=parseInt(o.value);isNaN(n)&&(n=1);const i=new SpeechSynthesisUtterance(t);i.rate=n,i.voice=a[e],speechSynthesis.speak(i)}speechSynthesis.getVoices();const toDeg=180/Math.PI,toRad=Math.PI/180;function setAll(t){const e="off"===t;autogear.setActive(e),autospoilers.setActive(e),autotrim.setActive(e),autoflaps.setActive(e),autolights.setActive(e),autobrakes.setActive(e),autospeed.setActive(e);document.getElementById("all").className=e?"active":"off"}function dependencyCheck(t){"autoland"===t&&autoland.isActive()&&domInterface.read("approach")?domInterface.write("approach",!1):"flypattern"===t&&flypattern.isActive()?(autoland.setActive(!1),flyto.setActive(!1)):"flyto"===t&&flyto.isActive()&&(flypattern.setActive(!1),autoland.setActive(!1))}const server=window.electron;server.on("ready",(([t])=>{document.getElementById("address").value=t,setHidden(!1)})),server.on("log",(([t])=>{log(t)}));const readbacks=new Map;async function readAsync(...t){let e=[];return t.forEach((t=>{e.push(new Promise((e=>{let a=0,o="";for(;o=t+a.toString(),readbacks.has(o);)a++;readbacks.set(o,e),server.send("read",t,o)})))})),Promise.all(e)}async function readLog(...t){await readAsync(...t).then((t=>{console.log(t.join(", "))}))}function write(t,e){server.send("write",t,e)}function bridge(){let t=document.getElementById("address").value;const e=t.split(".");""!==t&&(e.length<2&&(t="1."+t),e.length<3&&(t="168."+t),e.length<4&&(t="192."+t)),server.send("bridge",t)}function closeBridge(){reset(),server.send("break")}function setHidden(t){for(let e=1,a=panels.length;e<a;e++){panels[e].hidden=t}}function reset(){setHidden(!0),autofunctions.forEach((t=>{t.setActive(!1)})),storage.load(ProfileStorage.defaultName)}function log(t){statLog.innerText=t,console.log(t)}server.on("readback",(([t,e])=>{readbacks.get(t)(e),readbacks.delete(t)}));const domInterface=new DOMInterface,statLog=document.getElementById("status"),panels=document.getElementsByClassName("panel"),storage=new ProfileStorage(document.getElementById("profile-select")),select=document.getElementById("voices"),voices=speechSynthesis.getVoices();for(let t=0,e=voices.length;t<e;t++){const e=new Option(voices[t].lang,t.toString());select.add(e)}const autotrim=new Autofunction("trim",1e3,["onground","pitch","trim"],[],[],((t,e)=>{const[a,o,n]=t;if(a)return void(0!==n&&write("trim",0));let i=10;if(Math.abs(o)<10?i=1:Math.abs(o)<50&&(i=5),Math.abs(o)>=2){let t=n+i*Math.sign(o);t=Math.round(t/i)*i,write("trim",t)}})),autolights=new Autofunction("lights",2e3,["altitudeAGL","onground","onrunway","gear"],[],[],((t,e)=>{const[a,o,n,i]=t;write("master",!0),write("beaconlights",!0),write("navlights",!0),o?(write("strobelights",n),write("landinglights",n)):(write("strobelights",!0),write("landinglights",!!(a<1e3&&i)))})),autogear=new Autofunction("gear",1e3,["gear","altitudeAGL","verticalspeed"],[],[],((t,e)=>{const[a,o,n]=t;let i=a;o<100||n<=-500&&o<1200?i=!0:(n>=500||o>=2e3)&&(i=!1),i!==a&&readAsync("commands/LandingGear")})),autobrakes=new Autofunction("autobrakes",1e3,["leftbrake","rightbrake","autobrakes","onground","onrunway","groundspeed"],[],[],((t,e)=>{const[a,o,n,i,s,l]=t;let r=n;i&&!s?r=0:i?s&&(r=3):r=2,i&&l>30&&(a>.3||o>.3)&&(r=0),r!==n&&write("autobrakes",r)})),autoflaps=new Autofunction("flaps",1e3,["flaps","airspeed","altitudeAGL","verticalspeed","flapcount","onground","onrunway"],["flaplow","flaphigh","flapto"],[],((t,e)=>{const[a,o,n,i,s,l,r]=t,[c,d,u]=e;if(u<0||u>s-1||d<c)return void autoflaps.error();let f=a;if(l)f=r?u:0;else if(n>=250){const t=s-1,e=(d-c)/t;f=Math.round((d-o)/e),f=Math.max(f,0),f=Math.min(f,t)}(i>=500&&f>a||i<=-500&&f<a)&&(f=a),f!==a&&write("flaps",f)})),autospoilers=new Autofunction("spoilers",1e3,["spoilers","airspeed","spd","altitude","altitudeAGL","onrunway","onground"],[],[],((t,e)=>{const[a,o,n,i,s,l,r]=t;let c=0;l||!r&&s<1e3?c=2:!r&&(o-n>=20||n>255&&i<1e4)&&i<28e3&&(c=1),c!==a&&write("spoilers",c)})),autospeed=new Autofunction("autospeed",1e3,["onground","verticalspeed","altitudeAGL","altitude","latitude","longitude","spd"],["latref","longref","climbspd","climbalt","spdref","cruisespd"],[],((t,e)=>{const[a,o,n,i,s,l,r]=t,[c,d,u,f,h,g]=e,p=domInterface.read("altref")[0];if(a)return void autospeed.arm();const m=null===p?n:i-p;let v=r;if(autoland.isActive()){let t=10*(calcLLdistance({lat:s,long:l},{lat:c,long:d})-2.5)+h;t=Math.min(t,r),t=10*Math.round(t/10),t=Math.max(t,h),v=t}else flypattern.isActive()||i<=f?v=u:i<1e4||i<12e3&&o<=-500?v=250:m>=1e4&&(v=g);v=Math.min(v,g),v!==r&&write("spd",v)})),levelchange=new Autofunction("levelchange",1e3,["airspeed","altitude","alt"],["flcinput","flcmode"],[],((t,e)=>{const[a,o,n]=t,[i,s]=e;let l=i;const r=n-o;Math.abs(r)<100?levelchange.setActive(!1):("v"===s&&(l=NMtoFT*Math.tan(l*toRad)),"f"!==s&&(l*=a/60),l*=Math.sign(r),write("vs",l))})),markposition=new Autofunction("markposition",-1,["latitude","longitude","altitude","heading"],[],[],((t,e)=>{const[a,o,n,i]=t;domInterface.write("latref",a),domInterface.write("longref",o),domInterface.write("hdgref",Math.round(i)),domInterface.write("altref",Math.round(n))})),setrunway=new Autofunction("setrunway",-1,["route","coordinates"],[],[],((t,e)=>{const[a,o]=t,n=a.split(",");let i=-1;for(let t=0,e=n.length;t<e;t++)if(0===n[t].search(/RW\d\d.*/)){i=t;break}if(-1===i)return void setrunway.error();const s=n[i][2]+n[i][3]+"0",l=o.split(" ")[i].split(","),r=parseFloat(l[0]),c=parseFloat(l[1]),d=parseInt(s);domInterface.write("latref",r),domInterface.write("longref",c),domInterface.write("hdgref",d),domInterface.write("altref",null)})),rejecttakeoff=new Autofunction("reject",-1,["onrunway"],[],[],((t,e)=>{const[a]=t;if(!a)return rejecttakeoff.error(),void console.log("Not on a runway");autotakeoff.isActive()&&autotakeoff.error(),write("autopilot",!1),write("throttle",-100)})),takeoffconfig=new Autofunction("takeoffconfig",-1,["onground","heading","altitude"],["climbalt","climbtype","flcinputref","flcmoderef"],[],((t,e)=>{const[a,o,n]=t,[i,s,l,r]=e;if(!a)return takeoffconfig.error(),void console.log("Not on the ground");let c=i;if("agl"===s){c+=100*Math.round(n/100)}domInterface.write("flcinput",l),domInterface.write("flcmode",r),write("alt",c),write("hdg",o),write("vs",0),write("parkingbrake",!1)})),autotakeoff=new Autofunction("autotakeoff",500,["onrunway","n1","airspeed"],["rotate","climbspd","climbthrottle","takeoffspool","takeofflnav","takeoffvnav"],[takeoffconfig,rejecttakeoff],((t,e)=>{const[a,o,n]=t,[i,s,l,r,c,d]=e,u=2*l-100;let f=autotakeoff.stage;if(0===f){if(!a)return void autotakeoff.error("Not on a Runway");autotakeoff.status="Inital Setup",takeoffconfig.setActive(!0),levelchange.setActive(!1),write("spd",s),write("autopilot",!0),write("alton",!0),write("vson",!1),write("hdgon",!0);write("throttle",r?-20:u),f++}else 1===f?(write("vson",!0),r?null===o||o>=40?(write("throttle",u),f++):autotakeoff.status="Spolling Engines":f++):2===f?(autotakeoff.status="Takeoff Roll",n>=i&&(levelchange.setActive(!0),f++)):3===f?(autotakeoff.status="Rotate",s-n<10&&(autotakeoff.status="Climbout",c&&write("navon",!0),d&&vnavSystem.setActive(!0),write("spdon",!0),f++)):(autotakeoff.status="Takeoff Complete",autotakeoff.setActive(!1));autotakeoff.stage=f})),flyto=new Autofunction("flyto",1e3,["latitude","longitude","variation","groundspeed","wind","winddir"],["flytolat","flytolong","flytohdg"],[],((t,e)=>{const[a,o,n,i,s,l]=t,[r,c,d]=e;function u(t){return t=(t%360+360)%360}const f=calcLLdistance({lat:a,long:o},{lat:r,long:c});if(f<1)return flyto.status="Arrived",void flyto.setActive(!1);const h=60*(r-a),g=60*(c-o)*Math.cos(.5*(a+r)*toRad);let p=u(Math.atan2(g,h)*toDeg-n),m=u(d)-p;m>180?m-=360:m<-180&&(m+=360),Math.abs(m)<5?p-=-.1*m**3+8.5*m:p-=30*Math.sign(m);const v=u(l-n+180),w=(90-p)*toRad,y=(90-v)*toRad,A=2*i*Math.cos(w),I=2*i*Math.sin(w),M=s*Math.cos(y),k=s*Math.sin(y),L=u(Math.atan2(A-M,I-k)*toDeg);flyto.status=`Distance: ${f.toFixed(1)}nm`,flyto.status+=`\nOffset: ${m<0?"L":"R"} ${Math.abs(m).toFixed(1)}°`,flyto.status+=`\nCrab Angle: ${L-p<0?"L":"R"} ${Math.abs(L-p).toFixed(1)}°`,write("hdg",L)})),flypattern=new Autofunction("flypattern",1e3,["latitude","longitude","variation","groundspeed"],["latref","longref","hdgref","updist","downwidth","finallength","turnconst","leg","direction","approach"],[],((t,e)=>{const[a,o,n,i]=t,[s,l,r,c,d,u,f,h,g,p]=e,m=r+90*("r"===g?1:-1),v={location:{lat:s,long:l},hdg:r},w=v,y={location:calcLLfromHD(v.location,r,c+1.5,n),hdg:r},A={location:calcLLfromHD(y.location,m,d,n),hdg:m},I={location:calcLLfromHD(v.location,r+180,u,n),hdg:m+180},M={u:y,c:A,d:{location:calcLLfromHD(I.location,m,d,n),hdg:r+180},b:I,f:w}[h],k=calcLLdistance({lat:a,long:o},M.location);let L=h;if(k<i/60/(f/i*60*toRad)){const t=["u","c","d","b","f"];let e=t.indexOf(h);("f"!==h||"f"===h&&k<1)&&(e=(e+1)%5,L=t[e])}"f"===L&&p&&autoland.setActive(!0);const b=M.location.lat,S=M.location.long,T=(M.hdg%360+360)%360;domInterface.write("leg",L),domInterface.write("flytolat",b),domInterface.write("flytolong",S),domInterface.write("flytohdg",T),flyto.setActive(!0)})),goaround=new Autofunction("goaround",-1,["onground"],["climbalt","climbspd","climbtype","altref","flcinputref","flcmoderef"],[],((t,e)=>{const[a]=t,[o,n,i,s,l,r]=e;if(a)return goaround.error(),void(autoland.status="Cannot Go-Around on the ground");autoland.error("Go-Around"),domInterface.write("leg","u"),domInterface.write("flcinput",l),domInterface.write("flcmode",r);let c=o;if("agl"===i){c+=100*Math.round(s/100)}write("spd",n),write("alt",c),write("spdon",!0),write("alton",!0),write("hdgon",!0),levelchange.setActive(!0)})),autoland=new Autofunction("autoland",500,["latitude","longitude","altitude","groundspeed","onrunway"],["latref","longref","altref","hdgref","vparef","flare","touchdown","option","flcinputref","flcmoderef"],[flypattern,goaround],((t,e)=>{const[a,o,n,i,s]=t,[l,r,c,d,u,f,h,g,p,m]=e,v=n-c;0===autoland.stage&&(domInterface.write("flcmode","v"),domInterface.write("leg","f"),autoland.stage++);const w=calcLLdistance({lat:a,long:o},calcLLfromHD({lat:l,long:r},d,h/NMtoFT));if(1===autoland.stage&&v<=f)return autoland.stage++,levelchange.setActive(!1),domInterface.write("flcinput",p),void domInterface.write("flcmode",m);if(2===autoland.stage){if(write("vs",-200),"p"!==g&&(autoland.status="Flare",write("spdon",!1),write("throttle",-100)),"p"===g)autoland.status="Flying Low-Pass",autoland.setActive(!1),setTimeout((()=>{goaround.setActive(!0)}),1e4);else if("l"===g&&s)autoland.status="Landing Complete",autoland.setActive(!1),flypattern.setActive(!1),flyto.setActive(!1),write("autopilot",!1);else if("t"===g&&s)autoland.status="Preparing for Takeoff",autoland.setActive(!1),setTimeout((()=>{autoland.status="Touch and Go Complete",autotakeoff.setActive(!0)}),5e3);else if("s"===g&&s){if(autoland.status="Stopping for Stop and Go",i>1)return;autoland.status="Stop and Go Complete",autoland.setActive(!1),autotakeoff.setActive(!0)}return}const y=Math.asin(v/(w*NMtoFT))*toDeg;let A=3,I=1;w<=2?(A=1,I=.5):w<=3&&(A=2,I=.75);let M=y-A*(u-y);M=Math.round(100*M)/100,w>3&&(M<u-I||M<u-.25&&0===domInterface.read("flcinput")[0])?(autoland.status="Level-off for GPS G/S Capture",M=0):autoland.status="Following GPS G/S",M=Math.min(M,u+I),domInterface.write("flcinput",M),write("alt",-1e3),levelchange.setActive(!0),flypattern.setActive(!0),autogear.isActive()&&autogear.setActive("p"!==g)})),updatefpl=new Autofunction("updatefpl",-1,["fplinfo"],[],[],((t,e)=>{const[a]=t,o=JSON.parse(a),n=o.detailedInfo.flightPlanItems,i=n.length-1,s=`index${i}children`,l=document.getElementById(s+"0"),r=n[i].children;if(null===r)return;const c=s+(r.length-1).toString(),d=document.getElementById(c);if(null===l||null!==r&&null===d){const t=document.getElementById("waypoints");t.innerHTML="";for(let e=0,a=n.length;e<a;e++){let a;const i=n[e].children;if(null===i)a=o.detailedInfo.waypoints[e],showfpl(`index${e}children0`,a,t);else for(let o=0,n=i.length;o<n;o++)a=i[o].identifier,showfpl(`index${e}children${o}`,a,t)}}})),vnavSystem=new Autofunction("vnav",1e3,["fplinfo","onground","autopilot","groundspeed","altitude","vnavon"],[],[],((t,e)=>{const[a,o,n,i,s,l]=t;if(o||!n||l||levelchange.isActive())return void vnavSystem.error();updatefpl.setActive(!0);const r=JSON.parse(a),c=r.detailedInfo.flightPlanItems;let d={name:r.waypointName,index:-1,children:0,altitude:0,altitudeRestriction:[],altitudeRestrictionDistance:0,restrictionLocation:{lat:0,long:0}},u=vnavSystem.stage;for(let t=0,e=c.length;t<e;t++){const e=c[t],a=e.children;if(null===a)d=nextRestriction(e,d,t,0);else for(let e=0;e<a.length;e++)d=nextRestriction(a[t],d,t,e)}const f=`index${d.index}children${d.children}`,h=document.getElementById(f);if(null!==h&&"INPUT"===h.tagName){const t=h.value;""!==t&&r.distanceToNext<=10&&write("spd",t)}if(0===d.altitudeRestriction.length)return speak("No altitude restriction, VNAV disabled"),void vnavSystem.error();if(-1!==d.altitude){const t=(d.altitude-s)/r.eteToNext;write("alt",d.altitude),write("vs",t)}else{d.altitudeRestrictionDistance=calcLLdistance({lat:r.nextWaypointLatitude,long:r.nextWaypointLongitude},d.restrictionLocation);const t=(d.altitudeRestriction[0]-s)/((r.distanceToNext+d.altitudeRestrictionDistance)/i*60);write("alt",d.altitudeRestriction[0]),write("vs",t)}vnavSystem.stage=u}));let calloutFlags=[];const callout=new Autofunction("callout",250,["onrunway","airspeed","verticalspeed","throttle","gear","altitudeAGL","altitude"],["rotate","minumuns"],[],((t,e)=>{const[a,o,n,i,s,l,r]=t,[c,d]=e,u=domInterface.read("altref")[0],f=null===u?l:r-u,h=c,g=c+10;let p=callout.stage;0===p&&(calloutFlags=[!1,!1,!1,!1,!1,!1,!1,!1],p++),1===p&&o>=h&&a&&i>40?(speak("V1"),p++):2===p&&o>=c&&a&&i>40?(speak("Rotate"),p++):3===p&&o>=g&&i>40&&(speak("V2"),p++),!speechSynthesis.speaking&&n<-500&&!s&&f<=1e3&&speak("Landing Gear"),!speechSynthesis.speaking&&n<-500&&f<=d+10&&f>=d&&speak("Minimums");const m=[1e3,500,100,50,40,30,20,10];if(n<-500)for(let t=0,e=m.length-1;t<e;t++)if(!speechSynthesis.speaking&&f<=m[t]&&f>m[t+1]&&!calloutFlags[t]){speak(m[t].toString()),calloutFlags[t]=!0;break}callout.stage=p})),autofunctions=[autobrakes,autoflaps,autogear,autoland,autolights,autospeed,autospoilers,autotakeoff,autotrim,callout,flypattern,flyto,goaround,levelchange,markposition,rejecttakeoff,setrunway,takeoffconfig,updatefpl,vnavSystem];