"use strict";class ServerInterface{#t=window.electron;#e=null;pingDOM=null;#a=0;#o=new Map;async#s(t,...e){let a=this.#a;for(;this.#o.has(a);)a++;return this.#a=a+1,new Promise((o=>{this.#o.set(a,o),this.#t.send(t,a,...e)}))}#r(t,e){const a=this.#o.get(t);void 0!==a&&(this.#o.delete(t),this.#a=0,a(e))}constructor(t){this.pingDOM=t??null,this.#t.on("response",(([t,e])=>{this.#r(t,e)})),this.#t.on("log",(([t])=>{log(t)}))}async start(t){const e=(t=t??document.getElementById("address").value).split(".");""!==t&&(e.length<2&&(t="1."+t),e.length<3&&(t="168."+t),e.length<4&&(t="192."+t));const a=await this.#s("start",t);return document.getElementById("address").value=a,setHidden(!1),null!==this.#e&&clearInterval(this.#e),this.#e=setInterval((()=>{this.ping()}),1e3),a}async stop(){await this.#s("stop"),location.reload()}async ping(){const t=performance.now(),e=await this.#s("ping"),a=performance.now()-t,o=a-e;return null!==this.pingDOM&&(this.pingDOM.innerText=`Total Ping: ${a.toFixed(1)} ms`,this.pingDOM.innerText+=`\n\nServer Ping: ${o.toFixed(1)} ms`,this.pingDOM.innerText+=`\nDevice Ping: ${e.toFixed(1)} ms`),a}async readState(t){return this.#s("read",t)}async readStates(...t){let e=[];return t.forEach((t=>{e.push(this.readState(t))})),Promise.all(e)}writeState(t,e){this.#t.send("write",t,e)}async setState(t,e,a=3){const o=await this.readState(t);if("number"==typeof o&&"number"==typeof e){const s=10**-a;Math.abs(o-e)>=s&&this.writeState(t,e)}else o!==e&&this.writeState(t,e)}}class DOMInterface{#n=new Map;constructor(t){this.init(t)}#i(t){const e=this.#n.get(t.id);if(void 0===e)return;let a=null;switch(t.type){case"number":a=parseFloat(t.value);break;case"checkbox":a=t.checked;break;case"select-one":a=t.value}"number"==typeof a&&isNaN(a)&&(a=null),e.value=a}#l(t){t.classList.add("error"),setTimeout((()=>{t.classList.remove("error")}),2e3)}init(t){this.#n.clear();for(let e=0,a=t.length;e<a;e++){const a=t[e];this.add(a.id)}}add(...t){t.forEach((t=>{if(void 0!==this.#n.get(t))return;const e=document.getElementById(t);if(null===e)return;const a=e;a.addEventListener("change",(()=>{this.#i(a)})),this.#n.set(a.id,{dom:a,value:null}),this.#i(a)}))}readInput(t){return this.#n.get(t)?.value??null}readInputs(...t){let e=[];return t.forEach((t=>{e.push(this.readInput(t))})),e}readAll(){let t=new Map;return this.#n.forEach(((e,a)=>{t.set(a,e.value)})),t}write(t,e){const a=this.#n.get(t);if(void 0===a)return;a.value=e;const o=a.dom;"boolean"!=typeof e?(e=e??"",o.value=e.toString()):o.checked=e}validate(t=!1,...e){let a=!0;return e.forEach((e=>{const o=this.#n.get(e);if(void 0===o)return!1;const s=null!==o.value;!s&&t&&this.#l(o.dom),a=s&&a})),a}}class ProfileStorage{static defaultName="#default";#u;constructor(t){this.#u=t;const e=ProfileStorage.defaultName;null===localStorage.getItem(e)&&this.save(e),this.#d(),this.load(e)}#d(){let t=[];for(let e=0,a=localStorage.length;e<a;e++)t.push(localStorage.key(e));t.sort(),this.#u.innerHTML="",t.forEach((t=>{let e=new Option(t,t);this.#u.appendChild(e)}))}#c(t,e){const a=document.getElementById(t);null!==a&&(a.classList.remove("off"),a.classList.add(e),setTimeout((()=>{a.classList.remove(e),a.classList.add("off")}),500))}add(t){const e=document.getElementById("profile-name");void 0===t&&(t=e.value),e.value="",this.save(t),this.#d(),this.#u.value=t}save(t=this.#u.value){if(""===t)return void this.add();const e=dom.readAll();let a={};e.forEach(((t,e)=>{a[e]=t})),localStorage.setItem(t,JSON.stringify(a)),this.#c("profile-save","active")}load(t=this.#u.value){const e=localStorage.getItem(t);if(""===t||null===e)return void this.#c("profile-load","error");this.#u.value=t;const a=document.getElementById("loadempty").checked,o=JSON.parse(e);for(let t in o){let e=o[t];if(null!==e){let t=parseFloat(e.toString());isNaN(t)||(e=t)}else if(!a)continue;dom.write(t,e)}this.#c("profile-load","active")}remove(t=this.#u.value){if(""===t)return;confirm("Are you sure you want to delete: "+t)&&(localStorage.removeItem(t),this.#d())}}class PVA{kp;kv;ka;minValue;maxValue;maxDelta;options;#h=0;#f=0;#m=0;#v=0;#p;#g;constructor(t=0,e=0,a=0,o=-1/0,s=1/0,r=1/0,n={}){this.kp=t,this.kv=e,this.ka=a,this.minValue=o,this.maxValue=s,this.maxDelta=r,this.options=n,this.#p=n.cyclical??!1,this.#g=n.inverted??!1}get output(){return this.#v}#w(t){const e=this.maxValue-this.minValue;return((t-this.minValue)%e+e)%e+this.minValue}#y(t,e=-1/0,a=1/0){return t=Math.max(t,e),t=Math.min(t,a)}#S(t){const e=this.maxValue-this.minValue,a=Math.sign(t),o=this.#w(t);return o>e/2?(e-o)*-a:t}#A(t,e){let a=e-t;return this.#p&&(t=this.#w(t),a=(e=this.#w(e))-t,a=this.#S(a)),a}init(t=0){this.#v=t,this.#m=performance.now()/1e3}update(t,e,a=!1){const o=performance.now()/1e3,s=o-this.#m;if(0===s)return this.#v;this.#m=o;const r=this.maxDelta*s;if(this.#v<=this.minValue-r)return this.#v+=r,this.#v;if(this.#v>=this.maxValue+r)return this.#v-=r,this.#v;const n=this.#A(t,e),i=(n-this.#h)/s,l=(i-(this.#h-this.#f)/s)/s;this.#f=this.#h,this.#h=n;const u=this.kp*n,d=this.kv*i,c=this.ka*l;let h=(u+d+c)*s;return h=this.#y(h,-r,r),this.#g&&(h=-h),this.#v+=h,this.#v=this.#y(this.#v,this.minValue,this.maxValue),a&&(console.clear(),console.table({State:{Error:n.toFixed(2),Velocity:i.toFixed(2),Acceleration:l.toFixed(2),Output:this.#v.toFixed(2),Time:o.toFixed(2)},Gain:{Error:this.kp.toFixed(2),Velocity:this.kv.toFixed(2),Acceleration:this.ka.toFixed(2),Output:r.toFixed(2)},Output:{Error:u.toFixed(2),Velocity:d.toFixed(2),Acceleration:c.toFixed(2),Output:h.toFixed(2),Time:s.toFixed(2)}})),this.#v}}class AutoFunction{delay;#M;#k;#I;#D=null;#x=[];#F=[];#b=[];#T=!1;#C=!1;#E;memory={};stage=0;constructor(t,e,a,o,s,r){this.delay=e;const n=document.getElementById(t);if(this.#k=document.getElementById(t+"-status"),this.status="Idle",null===n)throw"Element "+t+" is undefined";this.#M=n,this.#M.addEventListener("click",(()=>{dependencyCheck(t),this.setActive()})),this.#L(),this.#x=a,this.#F=o,this.#b=s,this.#E=r,this.#F.forEach((t=>{let e=document.getElementById(t);if(null===e||"INPUT"!==e.tagName||"number"!==e.type)return;const a=e,o=document.getElementById("tooltip");a.addEventListener("mouseenter",(()=>{o.innerText=a.placeholder})),a.addEventListener("mouseout",(()=>{o.innerText="Tooltip"}))}))}set status(t){if(this.#I=t,null===this.#k)return;const e="STATUS:\n\n"+t;this.#k.innerText!==e&&(this.#k.innerText=e)}get status(){return this.#I}isActive(){return this.#T}setActive(t=!this.#T){if(this.#T!==t){if(this.#T=t,this.#L(),this.#T)return this.stage=0,void this.#O();clearTimeout(this.#D??void 0),this.#D=null}}#L(t){const e=this.#M.classList;void 0===t&&(t=this.isActive()?"active":"off"),e.contains(t)||(["off","active","armed","error"].forEach((t=>{e.remove(t)})),e.add(t))}async#O(){if(!this.validateInputs(!0))return void this.error("Some Required Inputs are Missing");const t=this.#C;this.#C=!1;const e=await server.readStates(...this.#x),a=dom.readInputs(...this.#F);await this.#E(e,a),!this.#C&&t&&this.#L(),-1!==this.delay?this.#T&&(this.#D=setTimeout((()=>{this.#D=null,this.#O()}),this.delay)):this.setActive(!1)}validateInputs(t=!1){let e=dom.validate(t,...this.#F);return this.#b.forEach((t=>{e=t.validateInputs()&&e})),e}arm(){this.#C=!0,this.#L("armed")}error(t){void 0!==t&&(this.status=t),this.setActive(!1),this.#L("error"),setTimeout((()=>{this.#L()}),2e3)}}const NMtoFT=6076.12,toDeg=180/Math.PI,toRad=Math.PI/180;function dms(t,e=0,a=0){return Math.sign(t)*(Math.abs(t)+e/60+a/3600)}function calcLLfromHD(t,e,a,o=0){e=90-e-o,e*=toRad;const s=(a/=60)*Math.sin(e)+t.lat;return{lat:s,long:a*Math.cos(e)/Math.cos(toRad*(t.lat+s)*.5)+t.long}}function calcLLdistance(t,e){const a=60*(e.lat-t.lat);return((60*(e.long-t.long)*Math.cos(.5*(t.lat+e.lat)*toRad))**2+a**2)**.5}function dependencyCheck(t){"autoland"===t&&autoland.isActive()&&dom.readInput("approach")?dom.write("approach",!1):"flypattern"===t&&flypattern.isActive()?(autoland.setActive(!1),flyto.setActive(!1)):"flyto"===t&&flyto.isActive()&&(flypattern.setActive(!1),autoland.setActive(!1))}function speak(t){t=t.toString();const e=document.getElementById("voices").selectedIndex,a=speechSynthesis.getVoices(),o=document.getElementById("utterancerate");let s=parseInt(o.value);isNaN(s)&&(s=1);const r=new SpeechSynthesisUtterance(t);r.rate=s,r.voice=a[e],speechSynthesis.speak(r)}function log(t){statLog.innerText=t,console.log(t)}async function readLog(...t){const e=await server.readStates(...t);console.log(e.join(", "))}function setHidden(t){for(let e=1,a=panels.length;e<a;e++){panels[e].hidden=t}}function setAll(t){const e="off"===t;autogear.setActive(e),autospoilers.setActive(e),autotrim.setActive(e),autoflaps.setActive(e),autolights.setActive(e),autobrakes.setActive(e),autospeed.setActive(e);document.getElementById("all").className=e?"active":"off"}speechSynthesis.getVoices();const statLog=document.getElementById("status"),panels=document.getElementsByClassName("panel"),server=new ServerInterface(document.getElementById("ping")),dom=new DOMInterface(document.getElementsByClassName("data")),storage=new ProfileStorage(document.getElementById("profile-select")),spdControl=new AutoFunction("spd",50,["airspeed","altitude","n1"],["apmaster","spdsel"],[],(async(t,e)=>{const[a,o,s]=t,[r,n]=e,i=dom.readInput("n1sel");if(void 0===spdControl.memory.ThrottlePID&&(spdControl.memory.ThrottlePID=new PVA(1,15,0,-100,100,40),spdControl.memory.n1PID=new PVA(1,5,0,15,110),spdControl.memory.n1ThrottlePID=new PVA(2,1,0,-100,100,40)),!r)return;const l=spdControl.memory.ThrottlePID,u=spdControl.memory.n1PID,d=spdControl.memory.n1ThrottlePID,c=null!==i&&null!==s;if(0===spdControl.stage){spdControl.stage++;const t=await server.readState("throttle");l.init(t)}if(1===spdControl.stage&&c){spdControl.stage++;const t=await server.readState("throttle");d.init(t),u.init(Number(s))}let h,f=n;if(flcControl.isActive()){const t=(dom.readInput("altsel")??0)-o;f+=10*Math.sign(t)}if(c){u.maxValue=i;const t=u.update(a,f);h=d.update(s,t)}else h=l.update(a,f);server.setState("spdon",!1),server.setState("spd",n),server.writeState("throttle",h)})),altControl=new AutoFunction("alt",100,["altitude"],["apmaster","altsel"],[],(async(t,e)=>{const[a]=t,[o,s]=e;if(void 0===altControl.memory.vsPID&&(altControl.memory.vsPID=new PVA(1,15,0,-2e3,2e3,200)),flcControl.isActive())return altControl.stage=0,void altControl.arm();if(0===altControl.stage&&(altControl.memory.althold=s),s!==altControl.memory.althold&&altControl.arm(),!o)return;const r=altControl.memory.vsPID;if(0===altControl.stage){altControl.stage++;const t=await server.readState("verticalspeed");r.init(t)}const n=altControl.memory.althold,i=r.update(a,n);server.setState("alton",!1),server.setState("vson",!0),server.setState("alt",n),server.writeState("vs",i)})),flcControl=new AutoFunction("flc",100,["airspeed","altitude"],["apmaster","spdsel","altsel"],[],(async(t,e)=>{const[a,o]=t,[s,r,n]=e;if(void 0===flcControl.memory.vsPID&&(flcControl.memory.vsPID=new PVA(100,100,0,void 0,void 0,200,{inverted:!0})),!s)return;altControl.setActive(!0);const i=flcControl.memory.vsPID;if(0===flcControl.stage){flcControl.stage++;const t=await server.readState("verticalspeed");i.init(t)}const l=n-o,u=i.output/i.maxDelta,d=l/i.output*60;if(Math.abs(u)>=Math.abs(d))return void flcControl.setActive(!1);n>o?(i.minValue=0,i.maxValue=5e3):(i.minValue=-3e3,i.maxValue=0);const c=i.update(a,r);server.setState("spdon",!1),server.setState("alton",!1),server.setState("vson",!0),server.setState("spd",r),server.setState("alt",n),server.writeState("vs",c)})),autotrim=new AutoFunction("trim",1e3,["onground","pitch","trim"],[],[],((t,e)=>{const[a,o,s]=t;if(a)return 0!==s&&server.setState("trim",0),void autotrim.arm();let r=10;if(Math.abs(o)<10?r=1:Math.abs(o)<50&&(r=5),Math.abs(o)>=2){let t=s+r*Math.sign(o);t=Math.round(t/r)*r,s!==t&&server.writeState("trim",t)}})),autolights=new AutoFunction("lights",2e3,["altitudeAGL","onground","onrunway","gear"],[],[],((t,e)=>{const[a,o,s,r]=t;server.setState("master",1),server.setState("beaconlights",1),server.setState("navlights",1),o?(server.setState("strobelights",Number(s)),server.setState("landinglights",Number(s))):(server.setState("strobelights",1),a<1e3?server.setState("landinglights",Number(r)):server.setState("landinglights",0))})),autogear=new AutoFunction("gear",1e3,["gear","altitudeAGL","verticalspeed"],[],[],((t,e)=>{const[a,o,s]=t;let r=a;o<100||s<=-500&&o<1200?r=!0:(s>=500||o>=2e3)&&(r=!1),r!==a&&server.readState("commands/LandingGear")})),autobrakes=new AutoFunction("autobrakes",1e3,["leftbrake","rightbrake","autobrakes","onground","onrunway","groundspeed"],[],[],((t,e)=>{const[a,o,s,r,n,i]=t;let l=s;r&&!n?l=0:r?n&&(l=3):l=2,r&&i>30&&(a>.3||o>.3)&&(l=0),l!==s&&server.writeState("autobrakes",l)})),autoflaps=new AutoFunction("flaps",1e3,["flaps","airspeed","altitudeAGL","verticalspeed","flapcount","onground","onrunway"],["flaplow","flaphigh","flapto"],[],((t,e)=>{const[a,o,s,r,n,i,l]=t,[u,d,c]=e;if(c<0||c>n-1||d<u)return void autoflaps.error();let h=a;if(i)h=l?c:0;else if(s>=250){const t=n-1,e=(d-u)/t;h=Math.round((d-o)/e),h=Math.max(h,0),h=Math.min(h,t)}(r>=500&&h>a||r<=-500&&h<a)&&(h=a),h!==a&&server.writeState("flaps",h)})),autospoilers=new AutoFunction("spoilers",1e3,["airspeed","spd","altitude","altitudeAGL","onrunway","onground"],[],[],((t,e)=>{const[a,o,s,r,n,i]=t;let l=0;n||!i&&r<1e3?l=2:!i&&(a-o>=20||o>255&&s<1e4)&&s<28e3&&(l=1),server.setState("spoilers",l)})),autospeed=new AutoFunction("autospeed",1e3,["onground","verticalspeed","altitudeAGL","altitude","latitude","longitude","spd","approach"],["latref","longref","climbspd","climbalt","spdref","cruisespd"],[],((t,e)=>{const[a,o,s,r,n,i,l,u]=t,[d,c,h,f,m,v]=e,p=dom.readInput("altref");if(a)return void autospeed.arm();const g=null===p?s:r-p;let w=l;if(autoland.isActive()||u){let t=10*(calcLLdistance({lat:n,long:i},{lat:d,long:c})-2.5)+m;t=10*Math.round(t/10),t=Math.max(t,m),t=Math.min(t,l),w=t}else flypattern.isActive()||r<f+250?w=h:r<1e4||r<12e3&&o<=-500?w=250:g>=1e4&&(w=v);w=Math.min(w,v),w!==l&&server.writeState("spd",w)})),altchange=new AutoFunction("altchange",1e3,["airspeed","altitude","alt"],["flcinput","flcmode"],[],((t,e)=>{const[a,o,s]=t,[r,n]=e;let i=r;const l=s-o;Math.abs(l)<100?altchange.setActive(!1):("v"===n&&(i=NMtoFT*Math.tan(i*toRad)),"f"!==n&&(i*=a/60),i*=Math.sign(l),server.writeState("vs",i))})),markposition=new AutoFunction("markposition",-1,["latitude","longitude","altitude","heading"],[],[],((t,e)=>{const[a,o,s,r]=t;dom.write("latref",a),dom.write("longref",o),dom.write("hdgref",Math.round(10*r)/10),dom.write("altref",Math.round(s))})),setrunway=new AutoFunction("setrunway",-1,["route","coordinates"],[],[],((t,e)=>{const[a,o]=t,s=a.split(",");let r=-1;for(let t=0,e=s.length;t<e;t++)if(0===s[t].search(/RW\d\d.*/)){r=t;break}if(-1===r)return void setrunway.error();const n=o.split(" ")[r].split(","),i=parseFloat(n[0]),l=parseFloat(n[1]);dom.write("latref",i),dom.write("longref",l),dom.write("hdgref",null),dom.write("altref",null)})),rejecttakeoff=new AutoFunction("reject",-1,[],[],[],((t,e)=>{autotakeoff.isActive()&&autotakeoff.error("Reject Takeoff"),server.writeState("autopilot",!1),server.writeState("throttle",-100)})),takeoffconfig=new AutoFunction("takeoffconfig",-1,["onground","heading","altitude"],["climbalt","climbtype","flcinputref","flcmoderef"],[],((t,e)=>{const[a,o,s]=t,[r,n,i,l]=e;if(!a)return takeoffconfig.error(),void console.log("Not on the ground");let u=r;if("agl"===n){u+=100*Math.round(s/100)}dom.write("flcinput",i),dom.write("flcmode",l),server.writeState("alt",u),server.writeState("hdg",o),server.writeState("vs",0),server.writeState("parkingbrake",!1)})),autotakeoff=new AutoFunction("autotakeoff",500,["onrunway","n1","airspeed"],["rotate","climbspd","climbthrottle","takeoffspool","takeofflnav","takeoffvnav"],[takeoffconfig,rejecttakeoff],((t,e)=>{const[a,o,s]=t,[r,n,i,l,u,d]=e,c=2*i-100;let h=autotakeoff.stage;if(0===h){if(!a)return void autotakeoff.error("Not on a Runway");autotakeoff.status="Inital Setup",takeoffconfig.setActive(!0),altchange.setActive(!1),server.writeState("spd",n),server.writeState("autopilot",!0),server.writeState("alton",!0),server.writeState("vson",!1),server.writeState("hdgon",!0);const t=l?-40:c;server.writeState("throttle",t),h++}else 1===h?(server.writeState("vson",!0),l?null===o||o>=40?(server.writeState("throttle",c),h++):autotakeoff.status="Spolling Engines":h++):2===h?(autotakeoff.status="Takeoff Roll",s>=r&&(altchange.setActive(!0),h++)):3===h?(autotakeoff.status="Rotate",n-s<10&&(autotakeoff.status="Climbout",u&&server.writeState("navon",!0),server.writeState("spdon",!0),h++)):(autotakeoff.status="Takeoff Complete",autotakeoff.setActive(!1));autotakeoff.stage=h})),flyto=new AutoFunction("flyto",500,["latitude","longitude","variation","groundspeed","wind","winddir"],["flytolat","flytolong","flytohdg"],[],((t,e)=>{const[a,o,s,r,n,i]=t,[l,u,d]=e;function c(t){return t=(t%360+360)%360}const h=calcLLdistance({lat:a,long:o},{lat:l,long:u});if(h<1)return flyto.status="Arrived",void flyto.setActive(!1);const f=c(d),m=60*(l-a),v=60*(u-o)*Math.cos(.5*(a+l)*toRad),p=c(Math.atan2(v,m)*toDeg-s);let g=f-p;g>180?g-=360:g<-180&&(g+=360);const w=h*Math.sin(g*toRad),y=Math.abs(w);let S=150*y*(flyto.memory.manual??1);S=Math.min(S,30),y>1&&(S=45);const A=c(f-S*Math.sign(w)),M=c(i-s+180),k=(90-A)*toRad,I=(90-M)*toRad,D=2*r*Math.cos(k),x=2*r*Math.sin(k),F=n*Math.cos(I),b=n*Math.sin(I),T=c(Math.atan2(D-F,x-b)*toDeg);function C(t,e=1){return`${t<0?"L":"R"} ${Math.abs(t).toFixed(e)}`}flyto.status=`Distance: ${h.toFixed(1)}nm`,flyto.status+=`\nX-Track: ${C(w,2)}nm`,flyto.status+=`\n\nDirect: ${p.toFixed(0)}°`,flyto.status+=`\nOffset: ${C(g)}°`,flyto.status+=`\nCrab Angle: ${C(T-A)}°`,server.writeState("hdg",T)})),flypattern=new AutoFunction("flypattern",1e3,["latitude","longitude","variation","groundspeed"],["latref","longref","hdgref","updist","downwidth","finallength","leg","direction","approachfinal"],[],((t,e)=>{const[a,o,s,r]=t,[n,i,l,u,d,c,h,f,m]=e,v=l+90*("r"===f?1:-1),p={location:{lat:n,long:i},hdg:l},g=p,w={location:calcLLfromHD(p.location,l,u+1.5,s),hdg:l},y={location:calcLLfromHD(w.location,v,d,s),hdg:v},S={location:calcLLfromHD(p.location,l+180,c,s),hdg:v+180},A={u:w,c:y,d:{location:calcLLfromHD(S.location,v,d,s),hdg:l+180},b:S,f:g}[h],M=calcLLdistance({lat:a,long:o},A.location);let k=h;if(M<r/60/(350/r*60*toRad)){const t=["u","c","d","b","f"];let e=t.indexOf(h);("f"!==h||"f"===h&&M<1)&&(e=(e+1)%5,k=t[e])}"f"===k&&m&&autoland.setActive(!0);const I=A.location.lat,D=A.location.long,x=(A.hdg%360+360)%360;dom.write("leg",k),dom.write("flytolat",I),dom.write("flytolong",D),dom.write("flytohdg",x),flyto.setActive(!0)})),goaround=new AutoFunction("goaround",-1,["onground"],["climbalt","climbspd","climbtype","altref","flcinputref","flcmoderef"],[],((t,e)=>{const[a]=t,[o,s,r,n,i,l]=e;if(a)return goaround.error(),void(autoland.status="Cannot Go-Around on the ground");autoland.error("Go-Around"),dom.write("leg","u"),dom.write("flcinput",i),dom.write("flcmode",l);let u=o;if("agl"===r){u+=100*Math.round(n/100)}server.setState("spd",s),server.setState("alt",u),server.setState("spdon",!0),server.setState("alton",!0),server.setState("hdgon",!0),altchange.setActive(!0)})),autoland=new AutoFunction("autoland",500,["latitude","longitude","altitude","groundspeed","onrunway"],["latref","longref","altref","hdgref","vparef","flare","touchdown","option","flcinputref","flcmoderef"],[flypattern,goaround],((t,e)=>{const[a,o,s,r,n]=t,[i,l,u,d,c,h,f,m,v,p]=e,g=s-u;if(0===autoland.stage&&(dom.write("flcmode","v"),dom.write("leg","f"),autoland.stage++),1===autoland.stage&&g<=h)return autoland.status="Flare",autoland.stage++,altchange.setActive(!1),dom.write("flcinput",v),void dom.write("flcmode",p);if(2===autoland.stage){if("p"!==m?(server.writeState("vs",-200),server.writeState("spdon",!1),server.writeState("throttle",-100)):server.writeState("vs",0),"p"===m)autoland.status="Flying Low-Pass",autoland.setActive(!1),setTimeout((()=>{goaround.setActive(!0)}),1e4);else if("l"===m&&n)autoland.status="Landing Complete",autoland.setActive(!1),flypattern.setActive(!1),flyto.setActive(!1),server.writeState("autopilot",!1);else if("t"===m&&n)autoland.status="Preparing for Takeoff",autoland.setActive(!1),setTimeout((()=>{autoland.status="Touch and Go Complete",autotakeoff.setActive(!0)}),5e3);else if("s"===m&&n){if(autoland.status="Stopping for Stop and Go",r>1)return;autoland.status="Stop and Go Complete",autoland.setActive(!1),autotakeoff.setActive(!0)}return}const w=calcLLdistance({lat:a,long:o},calcLLfromHD({lat:i,long:l},d,f/NMtoFT)),y=Math.atan2(g/NMtoFT,w)*toDeg,S=c-y,A=w*Math.sin(S*toRad);let M=c-100*A*(autoland.memory.manual??1);function k(t,e=1){return`${t>0?"B":"U"} ${Math.abs(t).toFixed(e)}`}M=Math.round(100*M)/100,autoland.status=`Distance: ${w.toFixed(2)}nm`,autoland.status+=`\nVX-Track: ${k(A*NMtoFT,0)}ft`,autoland.status+=`\n\nVPA: ${y.toFixed(2)}°`,autoland.status+=`\nOffset: ${k(S,2)}°`,M=Math.max(M,0),M=Math.min(M,c+2),dom.write("flcinput",M),server.writeState("alt",-1e3),altchange.setActive(!0),flypattern.setActive(!0),autogear.isActive()&&autogear.setActive("p"!==m)}));